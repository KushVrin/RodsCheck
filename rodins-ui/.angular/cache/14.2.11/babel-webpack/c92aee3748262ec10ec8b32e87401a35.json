{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, EventEmitter, forwardRef, Component as Component$1, ViewChildren, Input, Output, HostListener, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n/**\r\n * filters an array based on searctext\r\n */\n\nconst _c0 = [\"availableOption\"];\n\nfunction SearchMultiselectDropdownComponent_div_1_div_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 10)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"span\", 11);\n    i0.ɵɵlistener(\"click\", function SearchMultiselectDropdownComponent_div_1_div_2_span_1_Template_span_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const selected_r6 = restoredCtx.$implicit;\n      const i_r7 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r8.deselectItem(selected_r6, i_r7));\n    });\n    i0.ɵɵelement(4, \"i\", 12);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const selected_r6 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵstyleProp(\"color\", ctx_r5.config.theme.selectedItemColor)(\"background\", ctx_r5.config.theme.selectedItemBackground);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.config.displayKey ? selected_r6[ctx_r5.config.displayKey] : selected_r6, \" \");\n  }\n}\n\nfunction SearchMultiselectDropdownComponent_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, SearchMultiselectDropdownComponent_div_1_div_2_span_1_Template, 5, 5, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.selectedItems);\n  }\n}\n\nfunction SearchMultiselectDropdownComponent_div_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.selectedDisplayText, \" \");\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"angle-up\": a0,\n    \"angle-down\": a1\n  };\n};\n\nfunction SearchMultiselectDropdownComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"click\", function SearchMultiselectDropdownComponent_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.toggleSelectDropdown());\n    });\n    i0.ɵɵelement(1, \"span\", 5);\n    i0.ɵɵtemplate(2, SearchMultiselectDropdownComponent_div_1_div_2_Template, 2, 1, \"div\", 6);\n    i0.ɵɵtemplate(3, SearchMultiselectDropdownComponent_div_1_span_3_Template, 2, 1, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"color\", ctx_r0.config.theme.inputColor)(\"background\", ctx_r0.config.theme.inputBackground);\n    i0.ɵɵclassProp(\"remove-rdius\", ctx_r0.toggleDropdown);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c1, ctx_r0.toggleDropdown, !ctx_r0.toggleDropdown));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.config.multiple && ctx_r0.selectedItems.length > 0 && ctx_r0.config.showSelectedAtDropdown);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.config.showSelectedAtDropdown && ctx_r0.config.multiple && ctx_r0.selectedItems.length === 0 || !ctx_r0.config.showSelectedAtDropdown);\n  }\n}\n\nfunction SearchMultiselectDropdownComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function SearchMultiselectDropdownComponent_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.toggleSelectDropdown());\n    });\n    i0.ɵɵelementStart(1, \"span\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"color\", ctx_r1.config.theme.inputColor)(\"background\", ctx_r1.config.theme.inputBackground);\n    i0.ɵɵclassProp(\"remove-rdius\", ctx_r1.toggleDropdown);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.selectedDisplayText, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(8, _c1, ctx_r1.toggleDropdown, !ctx_r1.toggleDropdown));\n  }\n}\n\nfunction SearchMultiselectDropdownComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"input\", 21);\n    i0.ɵɵlistener(\"change\", function SearchMultiselectDropdownComponent_div_3_div_1_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.changeSearchText($event));\n    })(\"input\", function SearchMultiselectDropdownComponent_div_3_div_1_Template_input_input_1_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.searchTextChanged());\n    })(\"ngModelChange\", function SearchMultiselectDropdownComponent_div_3_div_1_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.searchText = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\");\n    i0.ɵɵtext(3, \" Search \");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"direction\", ctx_r14.config.inputDirection)(\"color\", ctx_r14.config.theme.searchInputColor);\n    i0.ɵɵproperty(\"ngModel\", ctx_r14.searchText);\n  }\n}\n\nfunction SearchMultiselectDropdownComponent_div_3_div_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 10)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"span\", 11);\n    i0.ɵɵlistener(\"click\", function SearchMultiselectDropdownComponent_div_3_div_2_span_1_Template_span_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const selected_r23 = restoredCtx.$implicit;\n      const i_r24 = restoredCtx.index;\n      const ctx_r25 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r25.deselectItem(selected_r23, i_r24));\n    });\n    i0.ɵɵelement(4, \"i\", 12);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const selected_r23 = ctx.$implicit;\n    const ctx_r22 = i0.ɵɵnextContext(3);\n    i0.ɵɵstyleProp(\"color\", ctx_r22.config.theme.selectedItemColor)(\"background\", ctx_r22.config.theme.selectedItemBackground);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r22.config.displayKey ? selected_r23[ctx_r22.config.displayKey] : selected_r23, \" \");\n  }\n}\n\nfunction SearchMultiselectDropdownComponent_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, SearchMultiselectDropdownComponent_div_3_div_2_span_1_Template, 5, 5, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r15.selectedItems);\n  }\n}\n\nconst _c2 = function (a0, a1) {\n  return {\n    active: a0,\n    disabled: a1\n  };\n};\n\nconst _c3 = function (a0, a1) {\n  return {\n    \"color\": a0,\n    \"background\": a1\n  };\n};\n\nfunction SearchMultiselectDropdownComponent_div_3_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 22, 23);\n    i0.ɵɵlistener(\"click\", function SearchMultiselectDropdownComponent_div_3_li_4_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r31);\n      const item_r27 = restoredCtx.$implicit;\n      const i_r28 = restoredCtx.index;\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r30.selectItem(item_r27, i_r28));\n    })(\"mouseover\", function SearchMultiselectDropdownComponent_div_3_li_4_Template_li_mouseover_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r31);\n      const i_r28 = restoredCtx.index;\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      ctx_r32.hover = \"hover-active-list\" + i_r28;\n      return i0.ɵɵresetView(ctx_r32.focusedItemIndex = \"null\");\n    })(\"mouseout\", function SearchMultiselectDropdownComponent_div_3_li_4_Template_li_mouseout_0_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r33 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r33.hover = \"\");\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r27 = ctx.$implicit;\n    const i_r28 = ctx.index;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c2, ctx_r16.focusedItemIndex == i_r28 && !(item_r27 == null ? null : item_r27.disabled), item_r27 == null ? null : item_r27.disabled))(\"ngStyle\", (ctx_r16.hover == \"hover-active-list\" + i_r28 || ctx_r16.focusedItemIndex == i_r28) && !(item_r27 == null ? null : item_r27.disabled) ? i0.ɵɵpureFunction2(6, _c3, ctx_r16.config.theme.listHoverColor, ctx_r16.config.theme.listHoverBackground) : i0.ɵɵpureFunction2(9, _c3, ctx_r16.config.theme.ContainerListColor, ctx_r16.config.theme.containerListBackground));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r16.config.displayKey ? item_r27[ctx_r16.config.displayKey] : item_r27, \" \");\n  }\n}\n\nfunction SearchMultiselectDropdownComponent_div_3_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r17.config.noResultsFound);\n  }\n}\n\nfunction SearchMultiselectDropdownComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, SearchMultiselectDropdownComponent_div_3_div_1_Template, 4, 5, \"div\", 16);\n    i0.ɵɵtemplate(2, SearchMultiselectDropdownComponent_div_3_div_2_Template, 2, 1, \"div\", 6);\n    i0.ɵɵelementStart(3, \"ul\", 17);\n    i0.ɵɵtemplate(4, SearchMultiselectDropdownComponent_div_3_li_4_Template, 3, 12, \"li\", 18);\n    i0.ɵɵpipe(5, \"filterBy\");\n    i0.ɵɵtemplate(6, SearchMultiselectDropdownComponent_div_3_li_6_Template, 2, 1, \"li\", 19);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"max-height\", ctx_r2.config.height)(\"color\", ctx_r2.config.theme.ContainerListColor)(\"background\", ctx_r2.config.theme.containerListBackground);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.config.search);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.config.multiple && ctx_r2.selectedItems.length > 0 && !ctx_r2.config.showSelectedAtDropdown);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(5, 10, ctx_r2.modelList, ctx_r2.searchText, ctx_r2.config.searchOnKey));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showNotFound);\n  }\n}\n\nlet FilterByPipe = /*#__PURE__*/(() => {\n  class FilterByPipe {\n    transform(array, searchText, keyName) {\n      if (!array || !searchText || !Array.isArray(array)) {\n        return array;\n      }\n\n      if (typeof array[0] === 'string') {\n        return array.filter(item => item.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n      } // filter array, items which match and return true will be\n      // kept, false will be filtered out\n\n\n      if (!keyName) {\n        return array.filter(item => {\n          for (const key in item) {\n            if (typeof item[key] !== 'object' && item[key].toString().toLowerCase().indexOf(searchText.toLowerCase()) > -1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n      } else {\n        return array.filter(item => {\n          if (typeof item[keyName] !== 'object' && item[keyName].toString().toLowerCase().indexOf(searchText.toLowerCase()) > -1) {\n            return true;\n          }\n\n          return false;\n        });\n      }\n    }\n\n  }\n\n  FilterByPipe.ɵfac = function FilterByPipe_Factory(t) {\n    return new (t || FilterByPipe)();\n  };\n\n  FilterByPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"filterBy\",\n    type: FilterByPipe,\n    pure: true\n  });\n  return FilterByPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass DropDownConfig {\n  constructor() {\n    this.multiple = false;\n    this.displayKey = '';\n    this.height = '';\n    this.search = false;\n    this.filterBlankData = false;\n    this.placeholder = '';\n    this.searchPlaceholder = '';\n    this.limitTo = 0;\n    this.customComparator = undefined;\n    this.noResultsFound = '';\n    this.moreText = '';\n    this.searchOnKey = null;\n    this.clearOnSelection = false;\n    this.inputDirection = '';\n    this.disabled = false;\n    this.showSelectedAtDropdown = false;\n    this.theme = new ConfigTheme();\n  }\n\n}\n\nclass ConfigTheme {\n  constructor() {\n    this.inputBackground = '';\n    this.inputColor = '';\n    this.containerListBackground = '';\n    this.ContainerListColor = '';\n    this.selectedItemColor = '';\n    this.selectedItemBackground = '';\n    this.listHoverBackground = '';\n    this.listHoverColor = '';\n    this.searchInputColor = '';\n  }\n\n}\n\nlet SearchMultiselectDropdownComponent = /*#__PURE__*/(() => {\n  class SearchMultiselectDropdownComponent {\n    constructor(cdref, _elementRef) {\n      this.cdref = cdref;\n      this._elementRef = _elementRef;\n      this.config = new DropDownConfig();\n      this.options = [];\n      this.change = new EventEmitter();\n      this.searchChange = new EventEmitter();\n      this.toggleDropdown = false;\n      this.modelList = [];\n      this.selectedDisplayText = 'Select';\n      this.clickedInside = false;\n      this.insideKeyPress = false;\n      this.focusedItemIndex = null;\n      this.showNotFound = false;\n      this.hover = '';\n\n      this.propagateChange = _ => {};\n\n      this.onChange = () => {};\n\n      this.onTouched = () => {};\n\n      this.config.multiple = false;\n    }\n\n    registerOnChange(fn) {\n      this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn) {}\n\n    setDisabledState(isDisabled) {}\n\n    ngOnChanges(changes) {\n      this.selectedItems = [];\n      this.options = this.options || [];\n\n      if (changes['options']) {\n        if (this.config.filterBlankData) {\n          this.modelList = [...this.options.filter(x => this.config.displayKey ? !!x[this.config.displayKey] : !!x)];\n        } else {\n          this.modelList = [...this.options.sort(this.config.customComparator)];\n        }\n      }\n    }\n\n    ngAfterViewInit() {\n      this.availableOptions.changes.subscribe(this.setNotFoundState.bind(this));\n    }\n\n    ngOnInit() {\n      if (typeof this.options !== 'undefined' && Array.isArray(this.options)) {\n        if (this.config.filterBlankData) {\n          this.modelList = [...this.options.filter(x => this.config.displayKey ? !!x[this.config.displayKey] : !!x)];\n        } else {\n          this.modelList = [...this.options.sort(this.config.customComparator)];\n        }\n\n        this.initDropdownValuesAndOptions();\n      }\n    }\n\n    get value() {\n      return this._value;\n    }\n\n    set value(val) {\n      this.propagateChange(val);\n      this._value = val;\n      this.onChange(val);\n      this.onTouched();\n    }\n\n    toggleSelectDropdown() {\n      this.toggleDropdown = !this.toggleDropdown;\n\n      if (this.toggleDropdown) {\n        // this.open.emit();\n        if (this.config.search) {\n          let t1 = setTimeout(() => {\n            document.getElementById('input-search-text').focus();\n            clearTimeout(t1);\n          }, 150);\n        }\n      } else {\n        this.searchText = null; // this.close.emit();\n      }\n\n      this.resetArrowKeyActiveElement();\n    }\n\n    resetArrowKeyActiveElement() {\n      this.focusedItemIndex = null;\n    }\n\n    changeSearchText($event) {\n      $event.stopPropagation();\n    }\n\n    searchTextChanged() {\n      this.searchChange.emit(this.searchText);\n    }\n\n    setNotFoundState() {\n      if (this.availableOptions.length === 0) {\n        this.showNotFound = true;\n      } else {\n        this.showNotFound = false;\n      }\n\n      this.cdref.detectChanges();\n    }\n\n    selectItem(item, index) {\n      if (!this.config.multiple) {\n        this.selectedItems = item;\n        this.toggleDropdown = false;\n      } else {\n        this.modelList.forEach((element, i) => {\n          if (item === element) {\n            this.selectedItems.push(item);\n            this.modelList.splice(i, 1);\n          }\n        });\n        this.selectedItems = [...this.selectedItems];\n        this.modelList = [...this.modelList];\n        this.selectedItems.sort(this.config.customComparator);\n      }\n\n      if (this.config.clearOnSelection) {\n        this.searchText = null;\n      }\n\n      this.modelList.sort(this.config.customComparator);\n      this.valueChanged();\n      this.resetArrowKeyActiveElement();\n    }\n\n    valueChanged() {\n      this.writeValue(this.selectedItems, true);\n      this.change.emit({\n        value: this.value\n      });\n      this.setSelectedDisplayText();\n    }\n\n    writeValue(value, internal) {\n      if (value) {\n        if (Array.isArray(value)) {\n          if (this.config.multiple) {\n            this.value = value;\n          } else if (value.length > 0) {\n            this.value = value[0];\n          }\n        } else {\n          this.value = value;\n        }\n\n        if (this.selectedItems.length === 0) {\n          if (Array.isArray(value)) {\n            this.selectedItems = value;\n          } else {\n            this.selectedItems.push(value);\n          }\n\n          this.initDropdownValuesAndOptions();\n        }\n      } else {\n        this.value = [];\n\n        if (!internal) {\n          this.reset();\n        }\n      }\n\n      if (!internal) {\n        this.reset();\n      }\n    }\n\n    reset() {\n      this.selectedItems = [];\n\n      if (this.config.filterBlankData) {\n        this.modelList = [...this.options.filter(x => this.config.displayKey ? !!x[this.config.displayKey] : !!x)];\n      } else {\n        this.modelList = [...this.options.sort(this.config.customComparator)];\n      }\n\n      this.initDropdownValuesAndOptions();\n    }\n\n    initDropdownValuesAndOptions() {\n      const config = {\n        multiple: false,\n        displayKey: 'value',\n        height: 'auto',\n        search: false,\n        placeholder: 'Select Item',\n        searchPlaceholder: 'Search...',\n        limitTo: 0,\n        customComparator: undefined,\n        noResultsFound: 'No results found!',\n        moreText: 'more',\n        searchOnKey: null,\n        clearOnSelection: false,\n        inputDirection: 'ltr',\n        disabled: false,\n        filterBlankData: false,\n        theme: {\n          inputBackground: '#fff',\n          inputColor: '#000',\n          containerListBackground: '#fff',\n          ContainerListColor: '#000',\n          selectedItemColor: '#fff',\n          selectedItemBackground: '#0085dd',\n          listHoverBackground: '#0085dd',\n          listHoverColor: '#fff',\n          searchInputColor: '#000'\n        }\n      };\n\n      if (Object.keys(this.config).length === 0) {\n        this.config = { ...config\n        };\n      }\n\n      for (const key of Object.keys(config)) {\n        if (key == 'theme') {\n          for (const tkey of Object.keys(config[key])) {\n            this.config[key][tkey] = this.config[key][tkey] ? this.config[key][tkey] : config[key][tkey];\n          }\n        } else {\n          this.config[key] = this.config[key] ? this.config[key] : config[key];\n        }\n      }\n\n      this.config = { ...this.config\n      };\n      this.selectedDisplayText = this.config['placeholder'];\n\n      if (this.value !== '' && typeof this.value !== 'undefined') {\n        if (Array.isArray(this.value)) {\n          this.selectedItems = this.value;\n        } else if (this.value !== '' && this.value !== null) {\n          this.selectedItems[0] = this.value;\n        } else {\n          this.selectedItems = [];\n          this.value = [];\n        }\n\n        this.selectedItems.forEach(item => {\n          const ind = this.modelList.findIndex(aItem => JSON.stringify(item) === JSON.stringify(aItem));\n\n          if (ind !== -1) {\n            this.modelList.splice(ind, 1);\n          }\n        });\n      }\n\n      this.setSelectedDisplayText();\n    }\n\n    setSelectedDisplayText() {\n      if (!this.config.multiple && this.selectedItems) {\n        this.selectedDisplayText = this.selectedItems[this.config.displayKey];\n      } else {\n        let text = this.selectedItems[0];\n\n        if (typeof this.selectedItems[0] === 'object') {\n          text = this.selectedItems[0][this.config.displayKey];\n        }\n\n        if (this.config.multiple && this.selectedItems.length > 0) {\n          this.selectedDisplayText = this.selectedItems.length === 1 ? text : text + ` + ${this.selectedItems.length - 1} ${this.config.moreText}`;\n        } else {\n          this.selectedDisplayText = this.selectedItems.length === 0 ? this.config.placeholder : text;\n        }\n      }\n    }\n\n    deselectItem(item, index) {\n      this.selectedItems.forEach((element, i) => {\n        if (item === element) {\n          this.selectedItems.splice(i, 1);\n        }\n      });\n      let sortedItems = [...this.modelList];\n\n      if (!this.modelList.includes(item)) {\n        this.modelList.push(item);\n        sortedItems = this.modelList.sort(this.config.customComparator);\n      }\n\n      this.selectedItems = [...this.selectedItems];\n      this.modelList = [...sortedItems];\n\n      if (!Array.isArray(this.value)) {\n        this.value = [];\n      }\n\n      this.valueChanged();\n      this.resetArrowKeyActiveElement();\n    }\n\n    clickInsideComponent() {\n      this.clickedInside = true;\n    }\n\n    blur() {\n      this.toggleDropdown = false;\n    }\n\n    focus() {\n      if (!this.config.disabled) {\n        this.toggleSelectDropdown();\n      }\n    }\n\n    clickOutsideComponent() {\n      if (!this.clickedInside) {\n        this.toggleDropdown = false;\n        this.resetArrowKeyActiveElement();\n        this.searchText = null; // this.close.emit();\n      }\n\n      this.clickedInside = false;\n    }\n\n    handleKeyboardEvent($event) {\n      this.insideKeyPress = true;\n\n      if ($event.keyCode === 27 || this.config.disabled) {\n        this.toggleDropdown = false;\n        this.insideKeyPress = false;\n        return;\n      }\n\n      const avaOpts = this.availableOptions.toArray();\n\n      if ($event.keyCode !== 9 && avaOpts.length === 0 && !this.toggleDropdown) {\n        this.toggleDropdown = true;\n      } // Arrow Down\n\n\n      if ($event.keyCode === 40 && avaOpts.length > 0) {\n        this.onArrowKeyDown();\n\n        if (this.focusedItemIndex >= avaOpts.length) {\n          this.focusedItemIndex = 0;\n        }\n\n        avaOpts[this.focusedItemIndex].nativeElement.focus();\n        $event.preventDefault();\n      } // Arrow Up\n\n\n      if ($event.keyCode === 38 && avaOpts.length) {\n        this.onArrowKeyUp();\n\n        if (this.focusedItemIndex >= avaOpts.length) {\n          this.focusedItemIndex = avaOpts.length - 1;\n        }\n\n        avaOpts[this.focusedItemIndex].nativeElement.focus();\n        $event.preventDefault();\n      } // Enter\n\n\n      if ($event.keyCode === 13 && this.focusedItemIndex !== null) {\n        const filteredItems = new FilterByPipe().transform(this.modelList, this.searchText, this.config.searchOnKey);\n        this.selectItem(filteredItems[this.focusedItemIndex], this.modelList.indexOf(filteredItems[this.focusedItemIndex]));\n        this.focusedItemIndex = 0;\n        avaOpts[this.focusedItemIndex].nativeElement.focus();\n      }\n    }\n\n    KeyPressOutsideComponent() {\n      if (!this.insideKeyPress) {\n        this.toggleDropdown = false;\n        this.resetArrowKeyActiveElement();\n      }\n\n      this.insideKeyPress = false;\n    }\n\n    onArrowKeyUp() {\n      if (this.focusedItemIndex === 0) {\n        this.focusedItemIndex = this.modelList.length - 1;\n        return;\n      }\n\n      if (this.onArrowKey()) {\n        this.focusedItemIndex--;\n      }\n    }\n\n    onArrowKeyDown() {\n      if (this.focusedItemIndex === this.modelList.length - 1) {\n        this.focusedItemIndex = 0;\n        return;\n      }\n\n      if (this.onArrowKey()) {\n        this.focusedItemIndex++;\n      }\n    }\n\n    onArrowKey() {\n      if (typeof this.focusedItemIndex !== 'number') {\n        this.focusedItemIndex = 0;\n        return false;\n      }\n\n      return true;\n    }\n\n  }\n\n  SearchMultiselectDropdownComponent.ɵfac = function SearchMultiselectDropdownComponent_Factory(t) {\n    return new (t || SearchMultiselectDropdownComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  SearchMultiselectDropdownComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SearchMultiselectDropdownComponent,\n    selectors: [[\"search-multiselect-dropdown\"]],\n    viewQuery: function SearchMultiselectDropdownComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.availableOptions = _t);\n      }\n    },\n    hostBindings: function SearchMultiselectDropdownComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function SearchMultiselectDropdownComponent_click_HostBindingHandler() {\n          return ctx.clickInsideComponent();\n        })(\"blur\", function SearchMultiselectDropdownComponent_blur_HostBindingHandler() {\n          return ctx.blur();\n        })(\"focus\", function SearchMultiselectDropdownComponent_focus_HostBindingHandler() {\n          return ctx.focus();\n        })(\"click\", function SearchMultiselectDropdownComponent_click_HostBindingHandler() {\n          return ctx.clickOutsideComponent();\n        }, false, i0.ɵɵresolveDocument)(\"keydown\", function SearchMultiselectDropdownComponent_keydown_HostBindingHandler($event) {\n          return ctx.handleKeyboardEvent($event);\n        })(\"keydown\", function SearchMultiselectDropdownComponent_keydown_HostBindingHandler() {\n          return ctx.KeyPressOutsideComponent();\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      config: \"config\",\n      options: \"options\",\n      _value: \"_value\"\n    },\n    outputs: {\n      change: \"change\",\n      searchChange: \"searchChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SearchMultiselectDropdownComponent),\n      multi: true\n    }]), i0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 3,\n    consts: [[\"tabindex\", \"0\", 1, \"auto-search-container\"], [\"class\", \"auto-search-button\", 3, \"remove-rdius\", \"color\", \"background\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"tabindex\", \"-1\", \"class\", \"auto-search-button\", 3, \"remove-rdius\", \"color\", \"background\", \"click\", 4, \"ngIf\"], [\"class\", \"auto-search-dropdown-list-container\", 3, \"maxHeight\", \"color\", \"background\", 4, \"ngIf\"], [1, \"auto-search-button\", 3, \"click\"], [3, \"ngClass\"], [\"class\", \"searched-selected-items\", 4, \"ngIf\"], [\"class\", \"search-text\", 4, \"ngIf\"], [1, \"searched-selected-items\"], [\"class\", \"badge badge-danger\", \"tabindex\", \"-1\", 3, \"color\", \"background\", 4, \"ngFor\", \"ngForOf\"], [\"tabindex\", \"-1\", 1, \"badge\", \"badge-danger\"], [2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"ml-2\", \"fas\", \"fa-times\", \"closef\"], [1, \"search-text\"], [\"type\", \"button\", \"tabindex\", \"-1\", 1, \"auto-search-button\", 3, \"click\"], [1, \"auto-search-dropdown-list-container\"], [\"class\", \"search-container\", 4, \"ngIf\"], [1, \"all-items\"], [\"tabindex\", \"-1\", 3, \"ngClass\", \"ngStyle\", \"click\", \"mouseover\", \"mouseout\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"search-container\"], [\"name\", \"search-text\", \"tabindex\", \"-1\", \"autocomplete\", \"off\", \"id\", \"input-search-text\", 3, \"ngModel\", \"change\", \"input\", \"ngModelChange\"], [\"tabindex\", \"-1\", 3, \"ngClass\", \"ngStyle\", \"click\", \"mouseover\", \"mouseout\"], [\"availableOption\", \"\"]],\n    template: function SearchMultiselectDropdownComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, SearchMultiselectDropdownComponent_div_1_Template, 4, 12, \"div\", 1);\n        i0.ɵɵtemplate(2, SearchMultiselectDropdownComponent_button_2_Template, 4, 11, \"button\", 2);\n        i0.ɵɵtemplate(3, SearchMultiselectDropdownComponent_div_3_Template, 7, 14, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.config.showSelectedAtDropdown);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.config.showSelectedAtDropdown);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.toggleDropdown);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgStyle, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, FilterByPipe],\n    styles: [\".auto-search-container[_ngcontent-%COMP%]{width:100%;position:relative}.auto-search-container[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::-webkit-scrollbar{width:5px}.auto-search-container[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::-webkit-scrollbar-track{background:#fff}.auto-search-container[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background:rgb(83,83,83)}.auto-search-container[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover{background:rgb(83,83,83)}.auto-search-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:inline-block;margin-bottom:0;font-weight:400;line-height:1.42857143;vertical-align:middle;white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;text-align:left}.auto-search-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:inline;vertical-align:middle}.auto-search-container[_ngcontent-%COMP%]   .auto-search-button[_ngcontent-%COMP%]{width:100%;min-height:44px;padding:5px 10px;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;user-select:none;border:1px solid #595966;border-radius:4px}.auto-search-container[_ngcontent-%COMP%]   .auto-search-button[_ngcontent-%COMP%]   .search-text[_ngcontent-%COMP%]{display:inline-block;width:calc(100% - 20px)}.auto-search-container[_ngcontent-%COMP%]   .auto-search-button[_ngcontent-%COMP%]   .searched-selected-items[_ngcontent-%COMP%]{padding:5px 0}.auto-search-container[_ngcontent-%COMP%]   .auto-search-button[_ngcontent-%COMP%]   .searched-selected-items[_ngcontent-%COMP%]   .badge[_ngcontent-%COMP%]{padding:.3em 1em;font-size:14px;font-family:poppins-medium;font-weight:400;margin:5px;line-height:1.5}.auto-search-container[_ngcontent-%COMP%]   .auto-search-button[_ngcontent-%COMP%]   .angle-down[_ngcontent-%COMP%]{right:5px;position:relative;float:right}.auto-search-container[_ngcontent-%COMP%]   .auto-search-button[_ngcontent-%COMP%]   .angle-down[_ngcontent-%COMP%]:before{border-style:solid;border-width:.1em .1em 0 0;content:\\\"\\\";display:inline-block;height:10px;position:relative;vertical-align:text-top;width:10px;top:0;transform:rotate(135deg)}.auto-search-container[_ngcontent-%COMP%]   .auto-search-button[_ngcontent-%COMP%]   .angle-up[_ngcontent-%COMP%]{right:5px;position:relative;float:right}.auto-search-container[_ngcontent-%COMP%]   .auto-search-button[_ngcontent-%COMP%]   .angle-up[_ngcontent-%COMP%]:before{margin-top:8px;border-style:solid;border-width:.1em .1em 0 0;content:\\\"\\\";display:inline-block;height:10px;position:relative;vertical-align:text-top;width:10px;transform:rotate(315deg)}.auto-search-container[_ngcontent-%COMP%]   .remove-rdius[_ngcontent-%COMP%]{border-bottom-left-radius:0!important;border-bottom-right-radius:0!important}.auto-search-container[_ngcontent-%COMP%]   .auto-search-dropdown-list-container[_ngcontent-%COMP%]{box-sizing:border-box;z-index:999999999;width:100%;background-clip:padding-box;position:absolute;border-bottom-left-radius:4px;border-bottom-right-radius:4px;box-shadow:5px 5px 5px #00000036;overflow-y:auto}.auto-search-container[_ngcontent-%COMP%]   .auto-search-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]{position:relative;margin-top:10px;padding:10px}.auto-search-container[_ngcontent-%COMP%]   .auto-search-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{background-color:transparent;border:none;border-bottom:1px solid #9e9e9e;border-radius:0;outline:none;height:2rem;width:100%;font-size:13px;margin:0;padding:0;box-shadow:none;box-sizing:content-box;transition:all .3s}.auto-search-container[_ngcontent-%COMP%]   .auto-search-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border-bottom:1px solid #9e9e9e}.auto-search-container[_ngcontent-%COMP%]   .auto-search-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus + label[_ngcontent-%COMP%]{transform:translateY(-5px) scale(.8);transform-origin:0 0;padding-left:10px}.auto-search-container[_ngcontent-%COMP%]   .auto-search-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{color:#9e9e9e;position:absolute;top:0;left:0;height:100%;font-size:1rem;cursor:text;transition:transform .2s ease-out;transform-origin:0% 100%;text-align:initial;transform:translateY(12px);pointer-events:none;padding-left:10px}.auto-search-container[_ngcontent-%COMP%]   .auto-search-dropdown-list-container[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   label.active[_ngcontent-%COMP%]{transform:translateY(-2px) scale(.8);transform-origin:0 0}.auto-search-container[_ngcontent-%COMP%]   .auto-search-dropdown-list-container[_ngcontent-%COMP%]   .searched-selected-items[_ngcontent-%COMP%]{padding:5px 0;border-bottom:1px solid #a4a4a4}.auto-search-container[_ngcontent-%COMP%]   .auto-search-dropdown-list-container[_ngcontent-%COMP%]   .searched-selected-items[_ngcontent-%COMP%]   .badge[_ngcontent-%COMP%]{padding:.3em 1em;font-size:14px;font-family:poppins-medium;font-weight:400;margin:5px;line-height:1.5}.auto-search-container[_ngcontent-%COMP%]   .auto-search-dropdown-list-container[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{margin-top:1rem;margin-bottom:1rem;list-style-type:none;padding-left:0}.auto-search-container[_ngcontent-%COMP%]   .auto-search-dropdown-list-container[_ngcontent-%COMP%]   ul.searched-selected-items[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{margin-bottom:2px}.auto-search-container[_ngcontent-%COMP%]   .auto-search-dropdown-list-container[_ngcontent-%COMP%]   ul.searched-selected-items[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .nsdicon-close[_ngcontent-%COMP%]{font-weight:700;font-size:large}.auto-search-container[_ngcontent-%COMP%]   .auto-search-dropdown-list-container[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{font-size:inherit;cursor:pointer;display:block;padding:5px 10px;clear:both;font-weight:400;line-height:1.42857143;white-space:normal;min-height:20px;height:100%}.auto-search-container[_ngcontent-%COMP%]   .auto-search-dropdown-list-container[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{cursor:pointer}\"]\n  });\n  return SearchMultiselectDropdownComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet LimitToPipe = /*#__PURE__*/(() => {\n  class LimitToPipe {\n    transform(array, itemsCount, startIndex = 0) {\n      if (!Array.isArray(array) || itemsCount === 0) {\n        return array;\n      }\n\n      return array.slice(startIndex, startIndex + itemsCount);\n    }\n\n  }\n\n  LimitToPipe.ɵfac = function LimitToPipe_Factory(t) {\n    return new (t || LimitToPipe)();\n  };\n\n  LimitToPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"limitTo\",\n    type: LimitToPipe,\n    pure: true\n  });\n  return LimitToPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst Component = [SearchMultiselectDropdownComponent, FilterByPipe, LimitToPipe];\nlet SearchMultiselectDropdownModule = /*#__PURE__*/(() => {\n  class SearchMultiselectDropdownModule {}\n\n  SearchMultiselectDropdownModule.ɵfac = function SearchMultiselectDropdownModule_Factory(t) {\n    return new (t || SearchMultiselectDropdownModule)();\n  };\n\n  SearchMultiselectDropdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SearchMultiselectDropdownModule\n  });\n  SearchMultiselectDropdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, FormsModule]\n  });\n  return SearchMultiselectDropdownModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\r\n * Public API Surface of search-multiselect-dropdown\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { DropDownConfig, FilterByPipe, LimitToPipe, SearchMultiselectDropdownComponent, SearchMultiselectDropdownModule }; //# sourceMappingURL=search-multiselect-dropdown.mjs.map","map":null,"metadata":{},"sourceType":"module"}